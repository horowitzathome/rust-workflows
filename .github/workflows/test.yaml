on:
  workflow_call:
    inputs:
      rust-version:
        type: string
        required: false
        default: nightly
        description: rust version to use for checks

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mydatabase
        ports:
          - 5432/tcp

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost/mydatabase      

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: ${{ inputs.rust-version }}
          override: true

      - name: Install Postgres client libraries
        run: |
          sudo apt-get install libpq-dev
          cargo install --no-default-features --features "postgres tokio-postgres"    

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Test
        run: cargo test -- --nocapture
